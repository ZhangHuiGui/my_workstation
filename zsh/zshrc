# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/gpadmin/pgsql/pgsql/lib/:/home/gpadmin/pie-db/s3-install/minio:/home/gpadmin/pie-db/fdb-dpkg/rocksdb-7.1.2/gflags/build/lib/:/home/gpadmin/pie-db/fdb-dpkg/foundationdb/build/lib:/usr/local/lib
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/gpadmin/pgsql/pgsql/lib/:/home/gpadmin/pie-db/s3-install/minio:/home/gpadmin/pie-db/fdb-dpkg/rocksdb-7.1.2/gflags/build/lib/:/usr/local/lib
export PATH=$PATH:/home/gpadmin/pie-db/pdb-tools/bin:/usr/local/go/bin/:/usr/bin/:/home/gpadmin/.local/bin:~/go/bin:/usr/loca/bin:/usr/local/vim/bin:/home/gpadmin/my_bin/nvim-linux64/bin:/usr/lib/llvm-11/bin/:/usr/share/bcc/tools/:/home/gpadmin/pie-db/s3-install/minio
export MINIO_ROOT_USER=minioadmin
export MINIO_ROOT_PASSWORD=minioadmin
export AWS_EC2_METADATA_DISABLED='true'
# export ODBCINI=/usr/local/etc/odbc.ini
# export ODBCSYSINI=/usr/local/etc
export ITERM=xterm-256color
export TERM=xterm-256color
# export LLVM_ROOT=/usr/lib/llvm-11/
export LLVM_ROOT=/home/gpadmin/pie-db/llvm-project/build
# export ODBCINI=/etc/odbc.ini
# export ODBCINI=/etc/

export GOPROXY='goproxy.dev.openpie.com'

# For postgresql
source /home/gpadmin/pie-db/piedb_cluster/greenplum_path.sh
# export PGOPTIONS="-c default_table_access_method=mstore -c jit=on -c gp_enable_agg_pushdown=false"
export ASAN_OPTIONS=detect_leaks=0:abort_on_error=1:disable_coredump=0:unmap_shadow_on_exit=1
# export ASAN_OPTIONS=detect_leaks=0:abort_on_error=1:disable_coredump=0

# Coredump
ulimit -c unlimited
setopt no_nomatch

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias fd="fdfind"
alias lg="linux_logo"
alias sf="screenfetch"
alias python="/usr/bin/python3"

export CCACHE_DIR=/home/gpadmin/ccache
export CC="ccache gcc"
export CXX="ccache g++"
export CLANG="ccache clang"
# export CC="gcc"
# export CXX="g++"
# export CLANG="clang"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('/home/gpadmin/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "/home/gpadmin/anaconda3/etc/profile.d/conda.sh" ]; then
#         . "/home/gpadmin/anaconda3/etc/profile.d/conda.sh"
#     else
#         export PATH="/home/gpadmin/anaconda3/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# <<< conda initialize <<<

