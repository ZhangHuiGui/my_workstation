let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/Desktop/work/source/llvm-project-11/llvm
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +15 lib/Bitcode/Writer/ValueEnumerator.h
badd +1 utils/TableGen/Types.h
badd +3 include/llvm/IR/Type.h
badd +1419 lib/IR/Instructions.cpp
badd +2 lib/IR/Instruction.cpp
badd +70 include/llvm/IR/LLVMContext.h
badd +1364 lib/IR/LLVMContextImpl.h
badd +26 lib/Bitcode/Reader/BitReader.cpp
badd +505 /opt/local/libexec/llvm-13/include/llvm-c/Core.h
badd +82 lib/IR/Core.cpp
badd +1790 lib/Bitcode/Reader/BitcodeReader.cpp
badd +535 lib/Transforms/Coroutines/CoroFrame.cpp
badd +253 /opt/local/libexec/llvm-13/include/llvm/IR/DerivedTypes.h
badd +356 lib/IR/Type.cpp
badd +6 utils/TableGen/Types.cpp
argglobal
%argdel
edit lib/Bitcode/Reader/BitReader.cpp
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 27 - ((22 * winheight(0) + 23) / 46)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 27
normal! 09|
lcd ~/Desktop/work/source/llvm-project-11/llvm
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
